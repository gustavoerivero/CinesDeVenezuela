/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package views;
// Se importan las librerías a utilizar.
import views.tables.*;
import lib.SupportFunctions;  

/**
 *  Materia: Laboratorio I
 *  Sección: 1
 *      Integrantes:
 *          @author Brizuela, Yurisbellys   C.I: 27.142.239
 *          @author Miranda, Marihec        C.I: 26.120.075
 *          @author Montero, Michael        C.I: 26.561.077
 *          @author Rivero, Gustavo         C.I: 26.772.857
 *          @author Torrealba, Luis         C.I: 26.121.249
 */
public class FilmManagement extends javax.swing.JFrame {

    // Se declaran e inicializan las variables a utilizar.
    int xx = 0, xy = 0, row = 0, column = 0;
    
    // Se declaran e instancian las clases a utilizar.
    private SupportFunctions support;
    private Table table = new Table();
    
    /**
     * Constructor del gestor de peliculas.
     */
    public FilmManagement() {
       // Inicializa todas las variables (o mejor dicho componentes) que usa el JFrame.
        initComponents();
        
        // Ubica el JFrame en el centro de la pantalla.
        setLocationRelativeTo(null);
        
        // Muestra el JFrame.
        setVisible(true);
        
        // Se limpia la view inicial.
        clearFilmSearch();
        
        // Cambia el ícono del JFrame.
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("images/CDV-icon.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panFilmManagement = new javax.swing.JPanel();
        panButtonsTopBar = new javax.swing.JPanel();
        btnMin = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        lblTittle = new javax.swing.JLabel();
        sepTittle = new javax.swing.JSeparator();
        lblSucursalName = new javax.swing.JLabel();
        btnChangeBranch = new javax.swing.JButton();
        panContainerFilm = new javax.swing.JPanel();
        panConsultList = new javax.swing.JPanel();
        scpFilmList = new javax.swing.JScrollPane();
        tblFilmList = new javax.swing.JTable();
        txtSearchIdFilm = new javax.swing.JTextField();
        sepSearchIdFilm = new javax.swing.JSeparator();
        txtSearchNameFilm = new javax.swing.JTextField();
        btnSearchFilm = new javax.swing.JButton();
        sepSearchNameFilm = new javax.swing.JSeparator();
        cmbSearchCensureFilm = new javax.swing.JComboBox<String>();
        btnClearSearchFilm = new javax.swing.JButton();
        panCRUD = new javax.swing.JPanel();
        lblTittle1 = new javax.swing.JLabel();
        lblIdFilm = new javax.swing.JLabel();
        lblSynopsisFilm = new javax.swing.JLabel();
        lblNameFilm = new javax.swing.JLabel();
        lblTypeFilm = new javax.swing.JLabel();
        lblCensureFilm = new javax.swing.JLabel();
        lblDurationFilm = new javax.swing.JLabel();
        dchPremiereFilm = new com.toedter.calendar.JDateChooser();
        lblPremiereFilm = new javax.swing.JLabel();
        lblPicture = new javax.swing.JLabel();
        lblPictureEmployee = new javax.swing.JLabel();
        txtIdFilm = new javax.swing.JTextField();
        txtNameFilm = new javax.swing.JTextField();
        txtSynopsisFilm = new javax.swing.JTextField();
        txtDurationFilm = new javax.swing.JTextField();
        txtTypeFilm = new javax.swing.JTextField();
        btnChargePicture = new javax.swing.JButton();
        btnClearPicture = new javax.swing.JButton();
        btnClearFilm = new javax.swing.JButton();
        btnRegisterModifyFilm = new javax.swing.JButton();
        btnBackFilm = new javax.swing.JButton();
        btnDeleteFilm = new javax.swing.JButton();
        cmbCensureFilm = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panFilmManagement.setBackground(new java.awt.Color(249, 249, 249));
        panFilmManagement.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75, 0, 145)));

        panButtonsTopBar.setBackground(new java.awt.Color(249, 249, 249));
        panButtonsTopBar.setPreferredSize(new java.awt.Dimension(215, 40));
        panButtonsTopBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panButtonsTopBarMouseDragged(evt);
            }
        });
        panButtonsTopBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panButtonsTopBarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panButtonsTopBarMouseReleased(evt);
            }
        });

        btnMin.setBackground(new java.awt.Color(249, 249, 249));
        btnMin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/expandArrow(Gray)-32px.png"))); // NOI18N
        btnMin.setToolTipText("Minimizar");
        btnMin.setBorder(null);
        btnMin.setBorderPainted(false);
        btnMin.setContentAreaFilled(false);
        btnMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMin.setFocusPainted(false);
        btnMin.setOpaque(true);
        btnMin.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnMinMouseMoved(evt);
            }
        });
        btnMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMinMouseExited(evt);
            }
        });

        btnExit.setBackground(new java.awt.Color(249, 249, 249));
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/multiply(Red)-32px.png"))); // NOI18N
        btnExit.setToolTipText("Cerrar");
        btnExit.setBorder(null);
        btnExit.setBorderPainted(false);
        btnExit.setContentAreaFilled(false);
        btnExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExit.setFocusPainted(false);
        btnExit.setOpaque(true);
        btnExit.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnExitMouseMoved(evt);
            }
        });
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExitMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panButtonsTopBarLayout = new javax.swing.GroupLayout(panButtonsTopBar);
        panButtonsTopBar.setLayout(panButtonsTopBarLayout);
        panButtonsTopBarLayout.setHorizontalGroup(
            panButtonsTopBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panButtonsTopBarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnMin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit)
                .addGap(14, 14, 14))
        );
        panButtonsTopBarLayout.setVerticalGroup(
            panButtonsTopBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panButtonsTopBarLayout.createSequentialGroup()
                .addGroup(panButtonsTopBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMin)
                    .addComponent(btnExit))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        lblTittle.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblTittle.setForeground(new java.awt.Color(28, 0, 63));
        lblTittle.setText("Gestión de Películas");
        lblTittle.setToolTipText("");

        sepTittle.setBackground(new java.awt.Color(249, 249, 249));
        sepTittle.setForeground(new java.awt.Color(239, 232, 244));

        lblSucursalName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblSucursalName.setForeground(new java.awt.Color(75, 0, 145));
        lblSucursalName.setText("Sucursal ");

        btnChangeBranch.setBackground(new java.awt.Color(249, 249, 249));
        btnChangeBranch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/shopIcon.png"))); // NOI18N
        btnChangeBranch.setToolTipText("Cambiar Sucursal");
        btnChangeBranch.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(249, 249, 249), 1, true));
        btnChangeBranch.setContentAreaFilled(false);
        btnChangeBranch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnChangeBranch.setFocusPainted(false);
        btnChangeBranch.setPreferredSize(new java.awt.Dimension(50, 50));
        btnChangeBranch.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnChangeBranchMouseMoved(evt);
            }
        });
        btnChangeBranch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnChangeBranchMouseExited(evt);
            }
        });

        panContainerFilm.setBackground(new java.awt.Color(249, 249, 249));
        panContainerFilm.setLayout(new java.awt.CardLayout());

        panConsultList.setBackground(new java.awt.Color(249, 249, 249));

        tblFilmList.setBackground(new java.awt.Color(249, 249, 249));
        tblFilmList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Sinopsis", "Duracion", "Clasificacion", "fecha de estreno", "Genero", "Consultar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFilmList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblFilmList.setSelectionBackground(new java.awt.Color(75, 0, 145));
        tblFilmList.getTableHeader().setReorderingAllowed(false);
        tblFilmList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFilmListMouseClicked(evt);
            }
        });
        scpFilmList.setViewportView(tblFilmList);

        txtSearchIdFilm.setBackground(new java.awt.Color(249, 249, 249));
        txtSearchIdFilm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSearchIdFilm.setText("Codigo de la película");
        txtSearchIdFilm.setBorder(null);
        txtSearchIdFilm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchIdFilmMouseClicked(evt);
            }
        });
        txtSearchIdFilm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchIdFilmKeyTyped(evt);
            }
        });

        sepSearchIdFilm.setBackground(new java.awt.Color(249, 249, 249));
        sepSearchIdFilm.setForeground(new java.awt.Color(75, 0, 145));

        txtSearchNameFilm.setBackground(new java.awt.Color(249, 249, 249));
        txtSearchNameFilm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSearchNameFilm.setText("Nombre de la Película");
        txtSearchNameFilm.setBorder(null);
        txtSearchNameFilm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchNameFilmMouseClicked(evt);
            }
        });
        txtSearchNameFilm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchNameFilmKeyTyped(evt);
            }
        });

        btnSearchFilm.setBackground(new java.awt.Color(249, 249, 249));
        btnSearchFilm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/findUserIcon.png"))); // NOI18N
        btnSearchFilm.setToolTipText(" Buscar");
        btnSearchFilm.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(249, 249, 249), 1, true));
        btnSearchFilm.setContentAreaFilled(false);
        btnSearchFilm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearchFilm.setFocusPainted(false);
        btnSearchFilm.setPreferredSize(new java.awt.Dimension(50, 50));
        btnSearchFilm.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnSearchFilmMouseMoved(evt);
            }
        });
        btnSearchFilm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSearchFilmMouseExited(evt);
            }
        });

        sepSearchNameFilm.setBackground(new java.awt.Color(249, 249, 249));
        sepSearchNameFilm.setForeground(new java.awt.Color(75, 0, 145));

        cmbSearchCensureFilm.setBackground(new java.awt.Color(249, 249, 249));
        cmbSearchCensureFilm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbSearchCensureFilm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "- Seleccionar censura -", "A", "B", "C" }));
        cmbSearchCensureFilm.setBorder(null);
        cmbSearchCensureFilm.setLightWeightPopupEnabled(false);

        btnClearSearchFilm.setBackground(new java.awt.Color(249, 249, 249));
        btnClearSearchFilm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/searchIcon.png"))); // NOI18N
        btnClearSearchFilm.setToolTipText("Limpiar");
        btnClearSearchFilm.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(249, 249, 249), 1, true));
        btnClearSearchFilm.setContentAreaFilled(false);
        btnClearSearchFilm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClearSearchFilm.setFocusPainted(false);
        btnClearSearchFilm.setPreferredSize(new java.awt.Dimension(50, 50));
        btnClearSearchFilm.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnClearSearchFilmMouseMoved(evt);
            }
        });
        btnClearSearchFilm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnClearSearchFilmMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panConsultListLayout = new javax.swing.GroupLayout(panConsultList);
        panConsultList.setLayout(panConsultListLayout);
        panConsultListLayout.setHorizontalGroup(
            panConsultListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panConsultListLayout.createSequentialGroup()
                .addGroup(panConsultListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panConsultListLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scpFilmList))
                    .addGroup(panConsultListLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(panConsultListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sepSearchIdFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearchIdFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(panConsultListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sepSearchNameFilm, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                            .addComponent(txtSearchNameFilm))
                        .addGap(29, 29, 29)
                        .addComponent(cmbSearchCensureFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnSearchFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClearSearchFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panConsultListLayout.setVerticalGroup(
            panConsultListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panConsultListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panConsultListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panConsultListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnSearchFilm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmbSearchCensureFilm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnClearSearchFilm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panConsultListLayout.createSequentialGroup()
                        .addGroup(panConsultListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panConsultListLayout.createSequentialGroup()
                                .addComponent(txtSearchNameFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(panConsultListLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(txtSearchIdFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)))
                        .addGroup(panConsultListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sepSearchIdFilm)
                            .addComponent(sepSearchNameFilm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(scpFilmList, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                .addContainerGap())
        );

        panContainerFilm.add(panConsultList, "card2");

        panCRUD.setBackground(new java.awt.Color(249, 249, 249));

        lblTittle1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblTittle1.setForeground(new java.awt.Color(28, 0, 63));
        lblTittle1.setText("Datos de la película");
        lblTittle1.setToolTipText("");

        lblIdFilm.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        lblIdFilm.setForeground(new java.awt.Color(28, 0, 63));
        lblIdFilm.setText("Codigo:");
        lblIdFilm.setToolTipText("");

        lblSynopsisFilm.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        lblSynopsisFilm.setForeground(new java.awt.Color(28, 0, 63));
        lblSynopsisFilm.setText("Sinopsis:");
        lblSynopsisFilm.setToolTipText("");

        lblNameFilm.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        lblNameFilm.setForeground(new java.awt.Color(28, 0, 63));
        lblNameFilm.setText("Nombre:");
        lblNameFilm.setToolTipText("");

        lblTypeFilm.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        lblTypeFilm.setForeground(new java.awt.Color(28, 0, 63));
        lblTypeFilm.setText("Género:");
        lblTypeFilm.setToolTipText("");

        lblCensureFilm.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        lblCensureFilm.setForeground(new java.awt.Color(28, 0, 63));
        lblCensureFilm.setText("Censura:");
        lblCensureFilm.setToolTipText("");

        lblDurationFilm.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        lblDurationFilm.setForeground(new java.awt.Color(28, 0, 63));
        lblDurationFilm.setText("Duración:");
        lblDurationFilm.setToolTipText("");

        dchPremiereFilm.setBackground(new java.awt.Color(249, 249, 249));
        dchPremiereFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249, 249, 249)));
        dchPremiereFilm.setDateFormatString("yyyy-MM-dd");
        dchPremiereFilm.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        dchPremiereFilm.setOpaque(false);

        lblPremiereFilm.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        lblPremiereFilm.setForeground(new java.awt.Color(28, 0, 63));
        lblPremiereFilm.setText("Fecha de estreno:");
        lblPremiereFilm.setToolTipText("");

        lblPicture.setForeground(new java.awt.Color(239, 239, 239));
        lblPicture.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPicture.setText("Inserte foto");
        lblPicture.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(239, 239, 239), 1, true));

        lblPictureEmployee.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        lblPictureEmployee.setForeground(new java.awt.Color(28, 0, 63));
        lblPictureEmployee.setText("Poster:");
        lblPictureEmployee.setToolTipText("");

        txtIdFilm.setBackground(new java.awt.Color(249, 249, 249));
        txtIdFilm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtIdFilm.setText("Codigo de la pelicula");
        txtIdFilm.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(75, 0, 145)));

        txtNameFilm.setBackground(new java.awt.Color(249, 249, 249));
        txtNameFilm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNameFilm.setText("Nombre de la película");
        txtNameFilm.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(75, 0, 145)));

        txtSynopsisFilm.setBackground(new java.awt.Color(249, 249, 249));
        txtSynopsisFilm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSynopsisFilm.setText("Sinopsis de la pelicula ");
        txtSynopsisFilm.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(75, 0, 145)));

        txtDurationFilm.setBackground(new java.awt.Color(249, 249, 249));
        txtDurationFilm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtDurationFilm.setText("Duración de la película");
        txtDurationFilm.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(75, 0, 145)));

        txtTypeFilm.setBackground(new java.awt.Color(249, 249, 249));
        txtTypeFilm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTypeFilm.setText("Género de la película");
        txtTypeFilm.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(75, 0, 145)));

        btnChargePicture.setBackground(new java.awt.Color(249, 249, 249));
        btnChargePicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/findUserIcon.png"))); // NOI18N
        btnChargePicture.setToolTipText("Cargar");
        btnChargePicture.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(249, 249, 249), 1, true));
        btnChargePicture.setContentAreaFilled(false);
        btnChargePicture.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnChargePicture.setFocusPainted(false);
        btnChargePicture.setPreferredSize(new java.awt.Dimension(50, 50));
        btnChargePicture.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnChargePictureMouseMoved(evt);
            }
        });
        btnChargePicture.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnChargePictureMouseExited(evt);
            }
        });

        btnClearPicture.setBackground(new java.awt.Color(249, 249, 249));
        btnClearPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/views/images/findUserIcon.png"))); // NOI18N
        btnClearPicture.setToolTipText("Eliminar");
        btnClearPicture.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(249, 249, 249), 1, true));
        btnClearPicture.setContentAreaFilled(false);
        btnClearPicture.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClearPicture.setFocusPainted(false);
        btnClearPicture.setPreferredSize(new java.awt.Dimension(50, 50));
        btnClearPicture.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnClearPictureMouseMoved(evt);
            }
        });
        btnClearPicture.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnClearPictureMouseExited(evt);
            }
        });

        btnClearFilm.setBackground(new java.awt.Color(239, 232, 244));
        btnClearFilm.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnClearFilm.setText("Limpiar");
        btnClearFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnClearFilm.setBorderPainted(false);
        btnClearFilm.setContentAreaFilled(false);
        btnClearFilm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClearFilm.setFocusPainted(false);
        btnClearFilm.setOpaque(true);
        btnClearFilm.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnClearFilmMouseMoved(evt);
            }
        });
        btnClearFilm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnClearFilmMouseExited(evt);
            }
        });

        btnRegisterModifyFilm.setBackground(new java.awt.Color(239, 232, 244));
        btnRegisterModifyFilm.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnRegisterModifyFilm.setText("@Registrar/Actualizar");
        btnRegisterModifyFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnRegisterModifyFilm.setBorderPainted(false);
        btnRegisterModifyFilm.setContentAreaFilled(false);
        btnRegisterModifyFilm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegisterModifyFilm.setFocusPainted(false);
        btnRegisterModifyFilm.setOpaque(true);
        btnRegisterModifyFilm.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnRegisterModifyFilmMouseMoved(evt);
            }
        });
        btnRegisterModifyFilm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRegisterModifyFilmMouseExited(evt);
            }
        });

        btnBackFilm.setBackground(new java.awt.Color(239, 232, 244));
        btnBackFilm.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnBackFilm.setText("Atrás");
        btnBackFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnBackFilm.setBorderPainted(false);
        btnBackFilm.setContentAreaFilled(false);
        btnBackFilm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBackFilm.setFocusPainted(false);
        btnBackFilm.setOpaque(true);
        btnBackFilm.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnBackFilmMouseMoved(evt);
            }
        });
        btnBackFilm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBackFilmMouseExited(evt);
            }
        });

        btnDeleteFilm.setBackground(new java.awt.Color(239, 232, 244));
        btnDeleteFilm.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnDeleteFilm.setText("Eliminar");
        btnDeleteFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnDeleteFilm.setBorderPainted(false);
        btnDeleteFilm.setContentAreaFilled(false);
        btnDeleteFilm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteFilm.setFocusPainted(false);
        btnDeleteFilm.setOpaque(true);
        btnDeleteFilm.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnDeleteFilmMouseMoved(evt);
            }
        });
        btnDeleteFilm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeleteFilmMouseExited(evt);
            }
        });

        cmbCensureFilm.setBackground(new java.awt.Color(249, 249, 249));
        cmbCensureFilm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbCensureFilm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "- Seleccionar censura -", "A", "B", "C" }));
        cmbCensureFilm.setBorder(null);
        cmbCensureFilm.setLightWeightPopupEnabled(false);
        cmbCensureFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCensureFilmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panCRUDLayout = new javax.swing.GroupLayout(panCRUD);
        panCRUD.setLayout(panCRUDLayout);
        panCRUDLayout.setHorizontalGroup(
            panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panCRUDLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTittle1, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(panCRUDLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panCRUDLayout.createSequentialGroup()
                        .addComponent(btnBackFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClearFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRegisterModifyFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panCRUDLayout.createSequentialGroup()
                        .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panCRUDLayout.createSequentialGroup()
                                .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblNameFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(lblSynopsisFilm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblDurationFilm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblCensureFilm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lblIdFilm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panCRUDLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtIdFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNameFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDurationFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtSynopsisFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panCRUDLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cmbCensureFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(panCRUDLayout.createSequentialGroup()
                                .addComponent(lblPremiereFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dchPremiereFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panCRUDLayout.createSequentialGroup()
                                .addGap(454, 454, 454)
                                .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTypeFilm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPictureEmployee, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panCRUDLayout.createSequentialGroup()
                                        .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnChargePicture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnClearPicture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(txtTypeFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(23, 23, 23))
        );
        panCRUDLayout.setVerticalGroup(
            panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panCRUDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTittle1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panCRUDLayout.createSequentialGroup()
                        .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panCRUDLayout.createSequentialGroup()
                                .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIdFilm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblIdFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNameFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNameFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panCRUDLayout.createSequentialGroup()
                                .addComponent(btnChargePicture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClearPicture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSynopsisFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSynopsisFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTypeFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTypeFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDurationFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDurationFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCensureFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbCensureFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblPictureEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dchPremiereFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPremiereFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panCRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClearFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegisterModifyFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBackFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        panContainerFilm.add(panCRUD, "card2");

        javax.swing.GroupLayout panFilmManagementLayout = new javax.swing.GroupLayout(panFilmManagement);
        panFilmManagement.setLayout(panFilmManagementLayout);
        panFilmManagementLayout.setHorizontalGroup(
            panFilmManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panButtonsTopBar, javax.swing.GroupLayout.DEFAULT_SIZE, 918, Short.MAX_VALUE)
            .addComponent(sepTittle)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panFilmManagementLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panFilmManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panContainerFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panFilmManagementLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblTittle, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblSucursalName, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChangeBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)))
                .addContainerGap())
        );
        panFilmManagementLayout.setVerticalGroup(
            panFilmManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panFilmManagementLayout.createSequentialGroup()
                .addComponent(panButtonsTopBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panFilmManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panFilmManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTittle, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblSucursalName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnChangeBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sepTittle, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panContainerFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panFilmManagement, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panFilmManagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //<editor-fold defaultstate="collapsed" desc=" Métodos para manipular tablas ">
    
    /**
     * Método que retorna los valores iniciales de los componentes de 
     * JPanel de Film Management.
     */
    public void clearFilmSearch(){
        
        txtSearchIdFilm.setText("Codigo de la película");
        txtSearchNameFilm.setText("Nombre de la película");
        cmbSearchCensureFilm.setSelectedIndex(0);
        clearFilmTable(tblFilmList);
        
    }
 
    /**
     * Método que retorna los valores iniciales de un JTable.
     * @param table parámetro JTable.
     */
    public void clearFilmTable(javax.swing.JTable table){
        this.table.buildFilmTable(table, null);
    }

    /**
     * Método para indicar el valor de una columna en un JTable.
     * @param column 
     */
    public void setColumnTable(int column){
        this.column = column;
    }
    
    /**
     * Método para obtener el valor de una columna en un JTable.
     * @return el valor de la columna.
     */
    public int getColumnTable(){
        return column;
    }
    
    /**
     * Método para indicar el valor de una fila en un JTable.
     * @param row 
     */
    public void setRowTable(int row){
        this.row = row;
    }
    
    /**
     * Método para obtener el valor de una columna en un JTable.
     * @return el valor de la fila.
     */
    public int getRowTable(){
        return row;
    }
    
    //</editor-fold>
    
    //<editor-fold defaultstate="collapsed" desc=" Listeners ">
    
    /**
     * Método que se activa al realizar una acción (presionar click sobre algún 
     * botón) añadiendo este evento a una lista que será manejada con mayor pro-
     * fundidad en el Controlador correspondiente.
     * Este método hace uso de la clase abstracta ActionListener la cual está 
     * fuertemente vinculada a todas las acciones provocadas por botones.
     * @param evt 
     */
    public void addEvents(java.awt.event.ActionListener evt){
        
        // Top Bar
        btnExit.addActionListener(evt);
        btnMin.addActionListener(evt);
        
        // Search
        btnChangeBranch.addActionListener(evt);
        btnSearchFilm.addActionListener(evt);
        btnClearSearchFilm.addActionListener(evt);
        
        // CRUD
        btnBackFilm.addActionListener(evt);
        btnChargePicture.addActionListener(evt);
        btnClearFilm.addActionListener(evt);
        btnClearPicture.addActionListener(evt);
        btnDeleteFilm.addActionListener(evt);
        btnRegisterModifyFilm.addActionListener(evt);
        
    }
    
    /**
     * Método que permite activar los eventos del escuchador Mouse.
     * @param evt parámetro que se activa cuando el Mouse reacciona a algo.
     */
    public void addMouseEvents(java.awt.event.MouseListener evt){
        
        tblFilmList.addMouseListener(evt);
        
    }
    
    //</editor-fold>
    
    /**
     * Método para devolver a los valores por defecto a los elementos de la view.
     */
    public void clearView(){
               
        btnBackFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnBackFilm.setForeground(new java.awt.Color(0,0,0));
        btnBackFilm.setBackground(new java.awt.Color(239,232,244));
        
        btnChangeBranch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnChangeBranch.setForeground(new java.awt.Color(0,0,0));
        btnChangeBranch.setBackground(new java.awt.Color(239,232,244));
        
        btnChargePicture.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnChargePicture.setForeground(new java.awt.Color(0,0,0));
        btnChargePicture.setBackground(new java.awt.Color(239,232,244));
        
        btnClearFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnClearFilm.setForeground(new java.awt.Color(0,0,0));
        btnClearFilm.setBackground(new java.awt.Color(239,232,244));
        
        btnClearPicture.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnClearPicture.setForeground(new java.awt.Color(0,0,0));
        btnClearPicture.setBackground(new java.awt.Color(239,232,244));
        
        btnClearSearchFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnClearSearchFilm.setForeground(new java.awt.Color(0,0,0));
        btnClearSearchFilm.setBackground(new java.awt.Color(239,232,244));
        
        btnDeleteFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnDeleteFilm.setForeground(new java.awt.Color(0,0,0));
        btnDeleteFilm.setBackground(new java.awt.Color(239,232,244));
        
        btnRegisterModifyFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnRegisterModifyFilm.setForeground(new java.awt.Color(0,0,0));
        btnRegisterModifyFilm.setBackground(new java.awt.Color(239,232,244));
        
        btnSearchFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnSearchFilm.setForeground(new java.awt.Color(0,0,0));
        btnSearchFilm.setBackground(new java.awt.Color(239,232,244));
        
        cmbCensureFilm.setSelectedIndex(0);
        cmbSearchCensureFilm.setSelectedIndex(0);
        
        
        dchPremiereFilm.setDate(null);
        
        txtIdFilm.setText("Codigo de la película");
        txtNameFilm.setText("Nombre de la película");
        txtSynopsisFilm.setText("Sinopsis de la película");
        txtDurationFilm.setText("Duración de la película");
        txtTypeFilm.setText("Género de la película");
        
        // Búsqueda
        txtSearchIdFilm.setText("Codigo de la película");
        txtSearchNameFilm.setText("Nombre de la película");
        
    }
     //<editor-fold defaultstate="collapsed" desc=" Top Bar ">
    private void btnMinMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinMouseMoved
        btnMin.setBackground(new java.awt.Color(239,232,244));
    }//GEN-LAST:event_btnMinMouseMoved

    private void btnMinMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinMouseExited
        btnMin.setBackground(new java.awt.Color(249,249,249));
    }//GEN-LAST:event_btnMinMouseExited

    private void btnExitMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseMoved
        btnExit.setBackground(new java.awt.Color(255,183,183));
    }//GEN-LAST:event_btnExitMouseMoved

    private void btnExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseExited
        btnExit.setBackground(new java.awt.Color(249,249,249));
    }//GEN-LAST:event_btnExitMouseExited

    private void panButtonsTopBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panButtonsTopBarMouseDragged
        //<editor-fold defaultstate="collapsed" desc=" Explicación sobre el método ">
        /*
        * Este método permite mover la aplicación por toda la pantalla del
        * computador del usuario.
        */

        // Se declaran las variables que obtienen la ubicación de la aplicación.
        //</editor-fold>
        int x = evt.getXOnScreen(); // Ubicación con respecto al eje X.
        int y = evt.getYOnScreen(); // Ubicación con respecto al eje Y.

        // Se ubica la aplicación en la nueva ubicación.
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_panButtonsTopBarMouseDragged

    private void panButtonsTopBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panButtonsTopBarMousePressed
        //<editor-fold defaultstate="collapsed" desc=" Explicación sobre el método ">
        /*
        * Este método posee dos características:
        *      1) La opacidad de la aplicación disminuye un 20%.
        *      2) Se obtiene la ubicación del Mouse en el momento.
        */

        // Se coloca la opacidad de la aplicación en 80%.
        //</editor-fold>
        setOpacity((float)0.8);

        // Se obtiene la ubicación del Mouse en el momento.
        xx = evt.getX(); // Ubicación con respecto al eje X.
        xy = evt.getY(); // Ubicación con respecto al eje Y.
    }//GEN-LAST:event_panButtonsTopBarMousePressed

    private void panButtonsTopBarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panButtonsTopBarMouseReleased
        //<editor-fold defaultstate="collapsed" desc=" Explicación sobre el método ">
        /*
        * Este método devuelve la opacidad de la aplicación a su valor base.
        */

        // Se coloca la opacidad de la aplicación en 100%.
        //</editor-fold>
        setOpacity((float)1.0);
    }//GEN-LAST:event_panButtonsTopBarMouseReleased

    private void btnChangeBranchMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChangeBranchMouseMoved
        btnChangeBranch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75,0,145)));
    }//GEN-LAST:event_btnChangeBranchMouseMoved

    private void btnChangeBranchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChangeBranchMouseExited
        btnChangeBranch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
    }//GEN-LAST:event_btnChangeBranchMouseExited
 //</editor-fold>
    /*
    private void tblFilmListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFilmListMouseClicked
        setColumnTable(tblFilmList.getColumnModel().getColumnIndexAtX(evt.getX()));
        setRowTable(evt.getY()/tblFilmList.getRowHeight());
    }//GEN-LAST:event_tblFilmListMouseClicked
 */
    //<editor-fold defaultstate="collapsed" desc=" Search Film ">
    private void txtSearchIdFilmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchIdFilmMouseClicked
        txtSearchIdFilm.setText("");
    }//GEN-LAST:event_txtSearchIdFilmMouseClicked

    private void txtSearchIdFilmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchIdFilmKeyTyped
        /*if(txtSearchIdEmployee.getText().length() < 10)
        support.integerPositiveKeyTyped(evt);
        else
        evt.consume();*/
    }//GEN-LAST:event_txtSearchIdFilmKeyTyped

    private void txtSearchNameFilmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchNameFilmMouseClicked
        txtSearchNameFilm.setText("");
    }//GEN-LAST:event_txtSearchNameFilmMouseClicked

    private void txtSearchNameFilmKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchNameFilmKeyTyped
        //support.alphabetKeyTyped(evt);
    }//GEN-LAST:event_txtSearchNameFilmKeyTyped

    private void btnSearchFilmMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchFilmMouseMoved
        btnSearchFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75,0,145)));
    }//GEN-LAST:event_btnSearchFilmMouseMoved

    private void btnSearchFilmMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchFilmMouseExited
        btnSearchFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
    }//GEN-LAST:event_btnSearchFilmMouseExited

    private void btnClearSearchFilmMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearSearchFilmMouseMoved
        btnClearSearchFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75,0,145)));
    }//GEN-LAST:event_btnClearSearchFilmMouseMoved

    private void btnClearSearchFilmMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearSearchFilmMouseExited
        btnClearSearchFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
    }//GEN-LAST:event_btnClearSearchFilmMouseExited
//</editor-fold>
    //<editor-fold defaultstate="collapsed" desc=" CRUD Film">
    private void btnChargePictureMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChargePictureMouseMoved
        btnChargePicture.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75,0,145)));
    }//GEN-LAST:event_btnChargePictureMouseMoved

    private void btnChargePictureMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChargePictureMouseExited
        btnChargePicture.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
    }//GEN-LAST:event_btnChargePictureMouseExited

    private void btnClearPictureMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearPictureMouseMoved
        btnClearPicture.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75,0,145)));
    }//GEN-LAST:event_btnClearPictureMouseMoved

    private void btnClearPictureMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearPictureMouseExited
        btnClearPicture.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
    }//GEN-LAST:event_btnClearPictureMouseExited

    private void btnClearFilmMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearFilmMouseMoved
        btnClearFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75,0,145)));
        btnClearFilm.setForeground(new java.awt.Color(255,255,255));
        btnClearFilm.setBackground(new java.awt.Color(66,0,124));
    }//GEN-LAST:event_btnClearFilmMouseMoved

    private void btnClearFilmMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearFilmMouseExited
        btnClearFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnClearFilm.setForeground(new java.awt.Color(0,0,0));
        btnClearFilm.setBackground(new java.awt.Color(239,232,244));
    }//GEN-LAST:event_btnClearFilmMouseExited

    private void btnRegisterModifyFilmMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegisterModifyFilmMouseMoved
        btnRegisterModifyFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75,0,145)));
        btnRegisterModifyFilm.setForeground(new java.awt.Color(255,255,255));
        btnRegisterModifyFilm.setBackground(new java.awt.Color(66,0,124));
    }//GEN-LAST:event_btnRegisterModifyFilmMouseMoved

    private void btnRegisterModifyFilmMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegisterModifyFilmMouseExited
        btnRegisterModifyFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnRegisterModifyFilm.setForeground(new java.awt.Color(0,0,0));
        btnRegisterModifyFilm.setBackground(new java.awt.Color(239,232,244));
    }//GEN-LAST:event_btnRegisterModifyFilmMouseExited

    private void btnBackFilmMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackFilmMouseMoved
        btnBackFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75,0,145)));
        btnBackFilm.setForeground(new java.awt.Color(255,255,255));
        btnBackFilm.setBackground(new java.awt.Color(66,0,124));
    }//GEN-LAST:event_btnBackFilmMouseMoved

    private void btnBackFilmMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackFilmMouseExited
        btnBackFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnBackFilm.setForeground(new java.awt.Color(0,0,0));
        btnBackFilm.setBackground(new java.awt.Color(239,232,244));
    }//GEN-LAST:event_btnBackFilmMouseExited

    private void btnDeleteFilmMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteFilmMouseMoved
        btnDeleteFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75,0,145)));
        btnDeleteFilm.setForeground(new java.awt.Color(255,255,255));
        btnDeleteFilm.setBackground(new java.awt.Color(66,0,124));
    }//GEN-LAST:event_btnDeleteFilmMouseMoved

    private void btnDeleteFilmMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteFilmMouseExited
        btnDeleteFilm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnDeleteFilm.setForeground(new java.awt.Color(0,0,0));
        btnDeleteFilm.setBackground(new java.awt.Color(239,232,244));
    }//GEN-LAST:event_btnDeleteFilmMouseExited

     private void tblFilmListMouseClicked(java.awt.event.MouseEvent evt) {                                         
        setColumnTable(tblFilmList.getColumnModel().getColumnIndexAtX(evt.getX()));
        setRowTable(evt.getY()/tblFilmList.getRowHeight());
    }   
    private void cmbCensureFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCensureFilmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCensureFilmActionPerformed
//</editor-fold>
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FilmManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FilmManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FilmManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FilmManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FilmManagement().setVisible(true);
            }
        });
    }
 //<editor-fold defaultstate="collapsed" desc=" Declaración de variables ">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnBackFilm;
    public javax.swing.JButton btnChangeBranch;
    public javax.swing.JButton btnChargePicture;
    public javax.swing.JButton btnClearFilm;
    public javax.swing.JButton btnClearPicture;
    public javax.swing.JButton btnClearSearchFilm;
    public javax.swing.JButton btnDeleteFilm;
    public javax.swing.JButton btnExit;
    public javax.swing.JButton btnMin;
    public javax.swing.JButton btnRegisterModifyFilm;
    public javax.swing.JButton btnSearchFilm;
    public javax.swing.JComboBox<String> cmbCensureFilm;
    public javax.swing.JComboBox<String> cmbSearchCensureFilm;
    public com.toedter.calendar.JDateChooser dchPremiereFilm;
    private javax.swing.JLabel lblCensureFilm;
    private javax.swing.JLabel lblDurationFilm;
    private javax.swing.JLabel lblIdFilm;
    private javax.swing.JLabel lblNameFilm;
    private javax.swing.JLabel lblPicture;
    private javax.swing.JLabel lblPictureEmployee;
    private javax.swing.JLabel lblPremiereFilm;
    public javax.swing.JLabel lblSucursalName;
    private javax.swing.JLabel lblSynopsisFilm;
    private javax.swing.JLabel lblTittle;
    private javax.swing.JLabel lblTittle1;
    private javax.swing.JLabel lblTypeFilm;
    private javax.swing.JPanel panButtonsTopBar;
    public javax.swing.JPanel panCRUD;
    public javax.swing.JPanel panConsultList;
    public javax.swing.JPanel panContainerFilm;
    private javax.swing.JPanel panFilmManagement;
    private javax.swing.JScrollPane scpFilmList;
    private javax.swing.JSeparator sepSearchIdFilm;
    private javax.swing.JSeparator sepSearchNameFilm;
    private javax.swing.JSeparator sepTittle;
    public javax.swing.JTable tblFilmList;
    public javax.swing.JTextField txtDurationFilm;
    public javax.swing.JTextField txtIdFilm;
    public javax.swing.JTextField txtNameFilm;
    public javax.swing.JTextField txtSearchIdFilm;
    public javax.swing.JTextField txtSearchNameFilm;
    public javax.swing.JTextField txtSynopsisFilm;
    public javax.swing.JTextField txtTypeFilm;
    // End of variables declaration//GEN-END:variables
//</editor-fold>
}

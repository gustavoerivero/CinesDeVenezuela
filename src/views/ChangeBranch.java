
package views;

/**
 *
 * @author Gustavo
 */
public class ChangeBranch extends javax.swing.JDialog {

    int xx = 0, xy = 0;
    String sucursal;
    private PopupDialogMessage popup;
        
    public ChangeBranch(java.awt.Frame parent, boolean modal) {
        
        // Relaciona elementos y decide si es un contenedor modal o no.
        super(parent, modal);
        
        // Se inician los componentes.
        initComponents();
        
        // Centra el JDialog.
        setLocationRelativeTo(null);
        
        // Muestra el JDialog en pantalla.
        setVisible(true);
        
        // Se inicializa la variable
        cmbCity.setSelectedIndex(0);
        cmbBranch.setSelectedIndex(0);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panChangeBranch = new javax.swing.JPanel();
        lblTittleChangeBranch = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        cmbCity = new javax.swing.JComboBox<>();
        lblBranch = new javax.swing.JLabel();
        cmbBranch = new javax.swing.JComboBox<>();
        panCloseBtn = new javax.swing.JPanel();
        btnClose = new javax.swing.JButton();
        panOkBtn = new javax.swing.JPanel();
        btnOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        panChangeBranch.setBackground(new java.awt.Color(249, 249, 249));
        panChangeBranch.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(75, 0, 145), 1, true));
        panChangeBranch.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panChangeBranchMouseDragged(evt);
            }
        });
        panChangeBranch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panChangeBranchMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panChangeBranchMouseReleased(evt);
            }
        });

        lblTittleChangeBranch.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblTittleChangeBranch.setForeground(new java.awt.Color(75, 0, 145));
        lblTittleChangeBranch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTittleChangeBranch.setText("Seleccione una sucursal a gestionar");

        lblCity.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblCity.setText("Ciudad:");

        cmbCity.setBackground(new java.awt.Color(249, 249, 249));
        cmbCity.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " - Seleccione - ", "Roma", "Venecia", "Florencia", "Toscana" }));
        cmbCity.setBorder(null);
        cmbCity.setLightWeightPopupEnabled(false);
        cmbCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCityActionPerformed(evt);
            }
        });

        lblBranch.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lblBranch.setText("Sucursal:");

        cmbBranch.setBackground(new java.awt.Color(249, 249, 249));
        cmbBranch.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cmbBranch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " - Seleccione - ", "Cines De Venezuela. Roma", "Cines De Venezuela. Venecia", "Cines De Venezuela. Florencia", "Cines De Venezuela. Toscana" }));
        cmbBranch.setBorder(null);
        cmbBranch.setLightWeightPopupEnabled(false);

        panCloseBtn.setBackground(new java.awt.Color(239, 232, 244));
        panCloseBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(239, 232, 244)));
        panCloseBtn.setPreferredSize(new java.awt.Dimension(156, 62));
        panCloseBtn.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                panCloseBtnMouseMoved(evt);
            }
        });
        panCloseBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panCloseBtnMouseExited(evt);
            }
        });

        btnClose.setBackground(new java.awt.Color(245, 245, 245));
        btnClose.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnClose.setForeground(new java.awt.Color(0, 0, 0));
        btnClose.setText("Cerrar");
        btnClose.setBorder(null);
        btnClose.setBorderPainted(false);
        btnClose.setContentAreaFilled(false);
        btnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClose.setFocusPainted(false);
        btnClose.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnCloseMouseMoved(evt);
            }
        });
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCloseMouseExited(evt);
            }
        });
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panCloseBtnLayout = new javax.swing.GroupLayout(panCloseBtn);
        panCloseBtn.setLayout(panCloseBtnLayout);
        panCloseBtnLayout.setHorizontalGroup(
            panCloseBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 154, Short.MAX_VALUE)
            .addGroup(panCloseBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(btnClose, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
        );
        panCloseBtnLayout.setVerticalGroup(
            panCloseBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(panCloseBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(btnClose, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
        );

        panOkBtn.setBackground(new java.awt.Color(239, 232, 244));
        panOkBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(239, 232, 244)));
        panOkBtn.setPreferredSize(new java.awt.Dimension(156, 62));
        panOkBtn.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                panOkBtnMouseMoved(evt);
            }
        });
        panOkBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panOkBtnMouseExited(evt);
            }
        });

        btnOk.setBackground(new java.awt.Color(245, 245, 245));
        btnOk.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnOk.setForeground(new java.awt.Color(0, 0, 0));
        btnOk.setText("Aceptar");
        btnOk.setBorder(null);
        btnOk.setBorderPainted(false);
        btnOk.setContentAreaFilled(false);
        btnOk.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnOk.setFocusPainted(false);
        btnOk.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnOkMouseMoved(evt);
            }
        });
        btnOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnOkMouseExited(evt);
            }
        });
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panOkBtnLayout = new javax.swing.GroupLayout(panOkBtn);
        panOkBtn.setLayout(panOkBtnLayout);
        panOkBtnLayout.setHorizontalGroup(
            panOkBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 154, Short.MAX_VALUE)
            .addGroup(panOkBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(btnOk, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
        );
        panOkBtnLayout.setVerticalGroup(
            panOkBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
            .addGroup(panOkBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(btnOk, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panChangeBranchLayout = new javax.swing.GroupLayout(panChangeBranch);
        panChangeBranch.setLayout(panChangeBranchLayout);
        panChangeBranchLayout.setHorizontalGroup(
            panChangeBranchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTittleChangeBranch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panChangeBranchLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(panChangeBranchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panChangeBranchLayout.createSequentialGroup()
                        .addComponent(panCloseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panOkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panChangeBranchLayout.createSequentialGroup()
                        .addComponent(lblBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbBranch, 0, 0, Short.MAX_VALUE))
                    .addGroup(panChangeBranchLayout.createSequentialGroup()
                        .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        panChangeBranchLayout.setVerticalGroup(
            panChangeBranchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panChangeBranchLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblTittleChangeBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panChangeBranchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCity, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panChangeBranchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblBranch, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(cmbBranch))
                .addGap(18, 18, 18)
                .addGroup(panChangeBranchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panCloseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panOkBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panChangeBranch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panChangeBranch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //<editor-fold defaultstate="collapsed" desc=" Configuraciones visuales ">
    
    private void panChangeBranchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panChangeBranchMousePressed
        //<editor-fold defaultstate="collapsed" desc=" Explicación sobre el método ">
        /*
        * Este método posee dos características:
        *      1) La opacidad de la aplicación disminuye un 20%.
        *      2) Se obtiene la ubicación del Mouse en el momento.
        */

        // Se coloca la opacidad de la aplicación en 80%.
        //</editor-fold>
        setOpacity((float)0.8);

        // Se obtiene la ubicación del Mouse en el momento.
        xx = evt.getX(); // Ubicación con respecto al eje X.
        xy = evt.getY(); // Ubicación con respecto al eje Y.
    }//GEN-LAST:event_panChangeBranchMousePressed

    private void panChangeBranchMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panChangeBranchMouseReleased
        //<editor-fold defaultstate="collapsed" desc=" Explicación sobre el método ">
        /*
        * Este método devuelve la opacidad de la aplicación a su valor base.
        */

        // Se coloca la opacidad de la aplicación en 100%.
        //</editor-fold>
        setOpacity((float)1.0);
    }//GEN-LAST:event_panChangeBranchMouseReleased

    private void panChangeBranchMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panChangeBranchMouseDragged
        //<editor-fold defaultstate="collapsed" desc=" Explicación sobre el método ">
        /*
        * Este método permite mover la aplicación por toda la pantalla del
        * computador del usuario.
        */

        // Se declaran las variables que obtienen la ubicación de la aplicación.
        //</editor-fold>
        int x = evt.getXOnScreen(); // Ubicación con respecto al eje X.
        int y = evt.getYOnScreen(); // Ubicación con respecto al eje Y.

        // Se ubica la aplicación en la nueva ubicación.
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_panChangeBranchMouseDragged

    private void panCloseBtnMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panCloseBtnMouseMoved
        panCloseBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75,0,145)));
        btnClose.setForeground(new java.awt.Color(255,255,255));
        panCloseBtn.setBackground(new java.awt.Color(66,0,124));
    }//GEN-LAST:event_panCloseBtnMouseMoved

    private void panCloseBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panCloseBtnMouseExited
        panCloseBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnClose.setForeground(new java.awt.Color(0,0,0));
        panCloseBtn.setBackground(new java.awt.Color(239,232,244));
    }//GEN-LAST:event_panCloseBtnMouseExited

    private void btnOkMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOkMouseMoved
        panOkBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75,0,145)));
        btnOk.setForeground(new java.awt.Color(255,255,255));
        panOkBtn.setBackground(new java.awt.Color(66,0,124));
    }//GEN-LAST:event_btnOkMouseMoved

    private void btnOkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOkMouseExited
        panOkBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnOk.setForeground(new java.awt.Color(0,0,0));
        panOkBtn.setBackground(new java.awt.Color(239,232,244));
    }//GEN-LAST:event_btnOkMouseExited

    private void btnCloseMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseMoved
        panCloseBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75,0,145)));
        btnClose.setForeground(new java.awt.Color(255,255,255));
        panCloseBtn.setBackground(new java.awt.Color(66,0,124));
    }//GEN-LAST:event_btnCloseMouseMoved

    private void btnCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseExited
        panCloseBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnClose.setForeground(new java.awt.Color(0,0,0));
        panCloseBtn.setBackground(new java.awt.Color(239,232,244));
    }//GEN-LAST:event_btnCloseMouseExited

    private void panOkBtnMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panOkBtnMouseMoved
        panOkBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75,0,145)));
        btnOk.setForeground(new java.awt.Color(255,255,255));
        panOkBtn.setBackground(new java.awt.Color(66,0,124));
    }//GEN-LAST:event_panOkBtnMouseMoved

    private void panOkBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panOkBtnMouseExited
        panOkBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(249,249,249)));
        btnOk.setForeground(new java.awt.Color(0,0,0));
        panOkBtn.setBackground(new java.awt.Color(239,232,244));
    }//GEN-LAST:event_panOkBtnMouseExited

    //</editor-fold>
    
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // Si los combobox no se encuentran en su estado inicial.
        if( cmbCity.getSelectedIndex() != 0 || cmbBranch.getSelectedIndex() != 0  ){
            
            // Se indica el valor de la sucursal seleccionada
            sucursal = cmbBranch.getSelectedItem().toString();
                                
            // Se cierra la interfaz
            setVisible(false);
                
        } else{
                
            // Si no se ha seleccionado algún dato (Ciudad o Sucursal)
            popup = new PopupDialogMessage(this, true, 1, "Faltan datos por seleccionar");
                
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // Se cierra la interfaz.
        dispose();
        
    }//GEN-LAST:event_btnCloseActionPerformed

    private void cmbCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCityActionPerformed
        // Se obtiene el elemento seleccionado.
        String item = (String) cmbCity.getSelectedItem();
            
        // Se remueven todos los items del combobox.
        cmbBranch.removeAllItems();
            
        // Se añade el item base del combobox
        cmbBranch.addItem(" - Seleccionar - ");
        cmbBranch.addItem("Cines De Venezuela. Roma");
            
        // Se instancia y se declara un Array que contendrá todos los nombres de las sucursales.
        java.util.ArrayList<String> sucursales = new java.util.ArrayList<String>();
            
        // Falta agregar el método que pasa la lista obtenida por la BD de 
        //   nombre de las sucursales a la variable 'sucursales' 
            
        // Se crea una variable indice.
        java.util.Iterator<String> i = sucursales.iterator();
            
        // Se llena el combobox con los elementos correspondientes
        while(i.hasNext()){
                
            cmbBranch.addItem(i.next());
                
        }
    }//GEN-LAST:event_cmbCityActionPerformed

    public String getId_Sucursal(){
        return sucursal;
    }
    
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnClose;
    public javax.swing.JButton btnOk;
    public javax.swing.JComboBox<String> cmbBranch;
    public javax.swing.JComboBox<String> cmbCity;
    private javax.swing.JLabel lblBranch;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblTittleChangeBranch;
    private javax.swing.JPanel panChangeBranch;
    private javax.swing.JPanel panCloseBtn;
    private javax.swing.JPanel panOkBtn;
    // End of variables declaration//GEN-END:variables
}
